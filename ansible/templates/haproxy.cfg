global
    log /dev/log    local0
    log /dev/log    local1 notice
    chroot /var/lib/haproxy
    stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
    stats timeout 30s
    user haproxy
    group haproxy
    daemon
    maxconn 1000
    tune.ssl.default-dh-param 2048

defaults
    log global
    mode http
    option httplog
    option dontlognull
    timeout connect 5000
    timeout client 10000
    timeout server 10000

frontend frontend1
    bind *:80
    default_backend backend_1

frontend frontend2
    bind *:81
    default_backend backend_2

frontend frontend3
    bind *:82
    default_backend backend_3    

backend backend_1
    mode http
    balance roundrobin
    {% for backend in groups['backend1'] %}
    server {{hostvars[backend].ansible_facts.ens3.ipv4.address}} {{ hostvars[backend].ansible_facts.ens3.ipv4.address }}:80 check {%if "sbg" in hostvars[backend].ansible_facts.hostname %}backup{% endif %}

    {% endfor -%}

backend backend_2
    mode http
    balance roundrobin
    {% for backend in groups['backend2'] %}
    server {{hostvars[backend].ansible_facts.ens4.ipv4.address}} {{ hostvars[backend].ansible_facts.ens4.ipv4.address }}:8080 check {%if "sbg" in hostvars[backend].ansible_facts.hostname %}backup{% endif %}
    
    {% endfor -%}

backend backend_3
    mode http
    balance roundrobin
    {% for backend in groups['backend3'] %}
    server {{hostvars[backend].ansible_facts.ens4.ipv4.address}} {{ hostvars[backend].ansible_facts.ens4.ipv4.address }}:80 check {%if "sbg" in hostvars[backend].ansible_facts.hostname %}backup{% endif %}
    
    {% endfor -%}
